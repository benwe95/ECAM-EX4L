# This is the build file for project "shell"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule llvm_ir_COMPILER
 command = cc  $ARGS -o $out -c $in
 description = Compiling LLVM IR object $in.

rule c_COMPILER
 command = cc  $ARGS -MMD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out.

rule c_PCH
 command = cc  $ARGS -MMD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.


# Rules for linking.

rule STATIC_LINKER
 command =  rm -f $out && ar $LINK_ARGS $out $in
 description = Linking static target $out.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS  $aliasing
 description = Linking target $out.


rule SHSYM
 command = /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson --internal symbolextractor $in $out $CROSS
 restat = 1
 description = Generating symbol file $out.

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule CUSTOM_COMMAND_DEP
 command = $COMMAND
 description = $DESC
 deps = gcc
 depfile = $DEPFILE
 restat = 1

rule REGENERATE_BUILD
 command = /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson --internal regenerate /Users/jonh/Documents/Dev/ECAM-EX4L /Users/jonh/Documents/Dev/ECAM-EX4L/build --backend ninja
 description = Regenerating build files.
 generator = 1


# Phony build target, always out of date
build PHONY: phony

# Build rules for targets

build recent@exe/recent_recent.c.o: c_COMPILER ../recent/recent.c
 DEPFILE = recent@exe/recent_recent.c.o.d
 ARGS = -Irecent@exe -I. -I.. -Xclang -fcolor-diagnostics -pipe -Wall -Winvalid-pch -O0 -g

build recent: c_LINKER recent@exe/recent_recent.c.o
 LINK_ARGS = -Wl,-headerpad_max_install_names

build shell@exe/shell_shell.c.o: c_COMPILER ../shell/shell.c
 DEPFILE = shell@exe/shell_shell.c.o.d
 ARGS = -Ishell@exe -I. -I.. -Xclang -fcolor-diagnostics -pipe -Wall -Winvalid-pch -O0 -g

build shell: c_LINKER shell@exe/shell_shell.c.o
 LINK_ARGS = -Wl,-headerpad_max_install_names

build listf@exe/listf_listf.c.o: c_COMPILER ../listf/listf.c
 DEPFILE = listf@exe/listf_listf.c.o.d
 ARGS = -Ilistf@exe -I. -I.. -Xclang -fcolor-diagnostics -pipe -Wall -Winvalid-pch -O0 -g

build listf: c_LINKER listf@exe/listf_listf.c.o
 LINK_ARGS = -Wl,-headerpad_max_install_names

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/opt/python3/bin/python3.6 -u /Users/jonh/Library/Python/3.6/bin/./meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/opt/python3/bin/python3.6 -u /Users/jonh/Library/Python/3.6/bin/./meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson --internal install /Users/jonh/Documents/Dev/ECAM-EX4L/build/meson-private/install.dat
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson --internal dist /Users/jonh/Documents/Dev/ECAM-EX4L /Users/jonh/Documents/Dev/ECAM-EX4L/build /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson --internal scanbuild /Users/jonh/Documents/Dev/ECAM-EX4L /Users/jonh/Documents/Dev/ECAM-EX4L/build /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson
 pool = console

build scan-build: phony meson-scan-build

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/opt/python3/bin/python3.6 /Users/jonh/Library/Python/3.6/bin/./meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony recent shell listf

default all

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = ninja -t clean
 description = Cleaning.

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

